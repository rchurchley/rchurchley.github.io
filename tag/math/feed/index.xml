<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Math &#8211; Ross Churchley</title>
	<atom:link href="https://rosschurchley.com/tag/math/feed/" rel="self" type="application/rss+xml" />
	<link>https://rosschurchley.com/</link>
	<description>A commonplace book by Ross Churchley</description>
	<lastBuildDate>Tue, 11 Jun 2024 07:57:05 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.5.4</generator>

<image>
	<url>https://rosschurchley.com/wp-content/uploads/2024/05/android-chrome-512x512-1-150x150.png</url>
	<title>Math &#8211; Ross Churchley</title>
	<link>https://rosschurchley.com/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>How to catch legendary Pokémon (in practice)</title>
		<link>https://rosschurchley.com/2018/how-to-catch-legendary-pokemon-with-electrical-networks/</link>
		
		<dc:creator><![CDATA[Ross]]></dc:creator>
		<pubDate>Sun, 16 Dec 2018 23:00:00 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[Math]]></category>
		<category><![CDATA[Pokémon]]></category>
		<guid isPermaLink="false">https://rosschurchley.com/?p=301</guid>

					<description><![CDATA[<img width="1600" height="900" src="https://rosschurchley.com/wp-content/uploads/2018/12/how-to-catch-legendary-pokemon-raikou.webp" class="attachment-large size-large wp-post-image" alt="The roaming Pokémon Raikou, depicted in the style of the cover Bonato and Nowakowski&#039;s Cops and Robbers textbook." decoding="async" fetchpriority="high" srcset="https://rosschurchley.com/wp-content/uploads/2018/12/how-to-catch-legendary-pokemon-raikou.webp 1600w, https://rosschurchley.com/wp-content/uploads/2018/12/how-to-catch-legendary-pokemon-raikou-800x450.webp 800w, https://rosschurchley.com/wp-content/uploads/2018/12/how-to-catch-legendary-pokemon-raikou-768x432.webp 768w, https://rosschurchley.com/wp-content/uploads/2018/12/how-to-catch-legendary-pokemon-raikou-1536x864.webp 1536w" sizes="(max-width: 1600px) 100vw, 1600px" />Pokémon Gold and Silver&#8216;s roaming legendary beasts move randomly from route to route instead of sticking to a fixed habitat. By analyzing their behaviour using the math of random walks on graphs, I can finally answer a question that&#8217;s bugged me since childhood: what&#8217;s the best strategy to find a roaming Pokémon as quickly as [&#8230;]]]></description>
										<content:encoded><![CDATA[<img width="1600" height="900" src="https://rosschurchley.com/wp-content/uploads/2018/12/how-to-catch-legendary-pokemon-raikou.webp" class="attachment-large size-large wp-post-image" alt="The roaming Pokémon Raikou, depicted in the style of the cover Bonato and Nowakowski&#039;s Cops and Robbers textbook." decoding="async" srcset="https://rosschurchley.com/wp-content/uploads/2018/12/how-to-catch-legendary-pokemon-raikou.webp 1600w, https://rosschurchley.com/wp-content/uploads/2018/12/how-to-catch-legendary-pokemon-raikou-800x450.webp 800w, https://rosschurchley.com/wp-content/uploads/2018/12/how-to-catch-legendary-pokemon-raikou-768x432.webp 768w, https://rosschurchley.com/wp-content/uploads/2018/12/how-to-catch-legendary-pokemon-raikou-1536x864.webp 1536w" sizes="(max-width: 1600px) 100vw, 1600px" />
<p><em>Pokémon Gold</em> and <em>Silver</em>&#8216;s roaming legendary beasts move randomly from route to route instead of sticking to a fixed habitat. By analyzing their behaviour using the math of random walks on graphs, I can finally answer a question that&#8217;s bugged me since childhood: what&#8217;s the best strategy to find a roaming Pokémon as quickly as possible?</p>



<span id="more-301"></span>



<p>Catching a roaming Pokémon is a <a href="https://rosschurchley.com/2012/how-to-catch-legendary-pokemon/" type="link" id="https://rosschurchley.com/blog/2012/how-to-catch-legendary-pokemon-in-theory/">graph pursuit game</a>, but in practice the optimal strategy doesn&#8217;t involve a chase at all. Raikou and the other roaming Pokémon move every time the player crosses the boundary from one location to another, regardless of how long that takes. So if we repeatedly cross the boundary by taking one step forward and one step back, Raikou will effortlessly speed across the map.</p>



<p>The easiest strategy, then, is to choose a centrally-located location and hop back and forth until Raikou comes to us. The question is what location gives the best results.</p>



<h2 class="wp-block-heading">Vertices of maximum degree</h2>



<p>When left to its own devices, a random walk in a graph <em>G</em> returns to a vertex <em>v</em> every</p>



<div class="wp-block-katex-display-block katex-eq" data-katex-display="true"><pre>\frac{2|E(G)|}{\deg(v)}</pre></div>



<p>steps. This suggests that the best place to find Raikou is a vertex of maximum degree on the graph corresponding to the Johto map.</p>



<figure class="wp-block-image size-large"><img decoding="async"  src="https://rosschurchley.com/wp-content/uploads/2024/05/how-to-catch-legendary-pokemon-maps.svg" alt="A map of Johto with the routes coloured in different shades of pink." class="wp-image-423"/><figcaption class="wp-element-caption">The routes of Johto coloured according to their corresponding vertex degrees.</figcaption></figure>



<p>This puts <a href="https://bulbapedia.bulbagarden.net/wiki/Johto_Route_31">Johto Route 31</a> as the top candidate, since it&#8217;s the only route adjacent to five other routes (Routes 30, 32, 36, 45, and 46) on the roaming Pokémon&#8217;s trajectory.</p>



<h2 class="wp-block-heading">Vertices with minimum average effective resistance</h2>



<p>Of course, we don&#8217;t intend to leave Raikou to its own devices—we&#8217;re going to try to catch it whenever it&#8217;s on our route! If it gets away, it will flee to a random location that can be <em>anywhere on the map</em>, regardless of whether it is adjacent or not. This wrinkle means we&#8217;re not exactly trying to find the vertex with the fastest return time; we&#8217;re really trying to minimize</p>



<div class="wp-block-katex-display-block katex-eq" data-katex-display="true"><pre>\frac{1}{|V(G)|}\sum_{u\in V(G)} T(u, v),</pre></div>



<p>where <em>T(u,<strong>&nbsp;</strong>v)</em> is the expected time for a random walk starting at <em>u</em> to first reach our vertex <em>v</em>.</p>



<p>How do we compute this value? According to <a href="https://doi.org/10.1007/bf01046996">Tetali</a>, we replace all of the edges with 1-ohm resistors and measure the effective resistances <em>R<sub>xy</sub></em> between each pair of nodes <em>x</em>, <em>y</em> in the corresponding electrical network. Then</p>



<div class="wp-block-katex-display-block katex-eq" data-katex-display="true"><pre>T(u, v) = \frac{1}{2}\sum_{w\in V(G)} \deg(w) (R_{uv} + R_{vw} - R_{uw}).</pre></div>



<p>It seems very appropriate to use the math of electrical networks to catch the electric-type Raikou! Unfortunately, there&#8217;s no references to effective resistance or Tetali&#8217;s formula in its Pokédex entry.</p>



<p>Effective resistance can be computed by hand using Kirchoff&#8217;s and Ohm&#8217;s Laws, but it&#8217;s much easier to plug it into <a href="https://www.sagemath.org/">SageMath</a>, which uses a <a href="https://mathworld.wolfram.com/ResistanceDistance.html">nifty formula</a> based on the Laplacian matrix of the graph.</p>



<figure class="wp-block-wp-chrosyblocks-vega-chart"><div class="chart" data-vega-spec="{
  &quot;mark&quot;: &quot;bar&quot;,
  &quot;encoding&quot;: {
    &quot;x&quot;: {
      &quot;field&quot;: &quot;time&quot;, &quot;type&quot;: &quot;quantitative&quot;,
      &quot;title&quot;: &quot;Expected capture time (steps)&quot;
    },
    &quot;y&quot;: {
      &quot;field&quot;: &quot;route&quot;, &quot;sort&quot;: &quot;x&quot;, &quot;title&quot;: &quot;&quot;
    }
  },
  &quot;data&quot;: { &quot;name&quot;: &quot;table&quot; }
}" data-vega-data="{
  &quot;table&quot;: [
    {
      &quot;route&quot;: &quot;Route 39&quot;,
      &quot;time&quot;: 144.4
    },
    {
      &quot;route&quot;: &quot;Route 34&quot;,
      &quot;time&quot;: 99.3
    },
    {
      &quot;route&quot;: &quot;Route 33&quot;,
      &quot;time&quot;: 86.5
    },
    {
      &quot;route&quot;: &quot;Route 29&quot;,
      &quot;time&quot;: 86.3
    },
    {
      &quot;route&quot;: &quot;Route 35&quot;,
      &quot;time&quot;: 79.4
    },
    {
      &quot;route&quot;: &quot;Route 30&quot;,
      &quot;time&quot;: 77.6
    },
    {
      &quot;route&quot;: &quot;Route 43&quot;,
      &quot;time&quot;: 65.5
    },
    {
      &quot;route&quot;: &quot;Route 38&quot;,
      &quot;time&quot;: 62.8
    },
    {
      &quot;route&quot;: &quot;Route 46&quot;,
      &quot;time&quot;: 49.5
    },
    {
      &quot;route&quot;: &quot;Route 44&quot;,
      &quot;time&quot;: 45.8
    },
    {
      &quot;route&quot;: &quot;Route 32&quot;,
      &quot;time&quot;: 43.3
    },
    {
      &quot;route&quot;: &quot;Route 37&quot;,
      &quot;time&quot;: 40.7
    },
    {
      &quot;route&quot;: &quot;Route 45&quot;,
      &quot;time&quot;: 39
    },
    {
      &quot;route&quot;: &quot;Route 42&quot;,
      &quot;time&quot;: 37.3
    },
    {
      &quot;route&quot;: &quot;Route 36&quot;,
      &quot;time&quot;: 30.8
    },
    {
      &quot;route&quot;: &quot;Route 31&quot;,
      &quot;time&quot;: 26.5
    }
  ]
}"></div><figcaption>Expected capture time when moving between a given route and an adjacent town</figcaption></figure>



<p>Route 31 comes out on top again by this measure: if Raikou starts from a random location, it will come to this route sooner on average than any other single location.</p>



<h2 class="wp-block-heading">Vertex pairs with minimum average effective resistance</h2>



<p>But this still isn&#8217;t the final answer. The above calculations assume we&#8217;re hopping between a route (where we can catch Raikou) and a town (where we can&#8217;t).<sup data-fn="52600543-9d44-47f5-b2a9-01e2163d9a04" class="fn"><a href="#52600543-9d44-47f5-b2a9-01e2163d9a04" id="52600543-9d44-47f5-b2a9-01e2163d9a04-link">1</a></sup> What if we go to a boundary where either side gives us a chance for an encounter?</p>



<p>There are only four pairs of routes in Johto where this is possible. The expected capture time when straddling one of these special boundaries can be computed using the same kinds of calculations. All four route pairs yield an expected capture time faster than relying on any individual route — enough to dethrone Route 31!</p>



<figure class="wp-block-wp-chrosyblocks-vega-chart"><div class="chart" data-vega-spec="{
  &quot;mark&quot;: &quot;bar&quot;,
  &quot;encoding&quot;: {
    &quot;x&quot;: {
      &quot;field&quot;: &quot;time&quot;,
      &quot;type&quot;: &quot;quantitative&quot;,
      &quot;aggregate&quot;: &quot;sum&quot;,
      &quot;stack&quot;: null,
      &quot;title&quot;: &quot;Expected capture time (steps)&quot;
    },
    &quot;y&quot;: {
      &quot;field&quot;: &quot;routes&quot;, &quot;sort&quot;: &quot;x&quot;, &quot;title&quot;: &quot;&quot;
    },
    &quot;color&quot;: {
      &quot;field&quot;: &quot;direction&quot;,
      &quot;scale&quot;: {&quot;range&quot;: [&quot;#e50684&quot;, &quot;#ffa5dc&quot;]},
      &quot;legend&quot;: null
    }
  },
  &quot;data&quot;: { &quot;name&quot;: &quot;table&quot; }
}" data-vega-data="{
  &quot;table&quot;: [
  {
    &quot;routes&quot;: &quot;Routes 35-36&quot;,
    &quot;direction&quot;: &quot;reverse&quot;,
    &quot;time&quot;: 27.3
  },
  {
    &quot;routes&quot;: &quot;Routes 45-46&quot;,
    &quot;direction&quot;: &quot;reverse&quot;,
    &quot;time&quot;: 25.7
  },
  {
    &quot;routes&quot;: &quot;Routes 30-31&quot;,
    &quot;direction&quot;: &quot;reverse&quot;,
    &quot;time&quot;: 24.4
  },
  {
    &quot;routes&quot;: &quot;Routes 37-36&quot;,
    &quot;direction&quot;: &quot;reverse&quot;,
    &quot;time&quot;: 17
  },
  {
    &quot;routes&quot;: &quot;Routes 35-36&quot;,
    &quot;direction&quot;: &quot;forward&quot;,
    &quot;time&quot;: 23.9
  },
  {
    &quot;routes&quot;: &quot;Routes 45-46&quot;,
    &quot;direction&quot;: &quot;forward&quot;,
    &quot;time&quot;: 25.3
  },
  {
    &quot;routes&quot;: &quot;Routes 30-31&quot;,
    &quot;direction&quot;: &quot;forward&quot;,
    &quot;time&quot;: 19.7
  },
  {
    &quot;routes&quot;: &quot;Routes 37-36&quot;,
    &quot;direction&quot;: &quot;forward&quot;,
    &quot;time&quot;: 14.2
  }
]}"></div><figcaption>Expected capture time when moving between adjacent locations. Each pair has two expected capture times, shown in different shades, depending on which route is considered the starting point.</figcaption></figure>



<details class="wp-block-details is-layout-flow wp-block-details-is-layout-flow"><summary>Source code</summary>
<div class="wp-block-kevinbatdorf-code-block-pro" data-code-block-pro-font-family="Code-Pro-JetBrains-Mono" style="font-size:.875rem;font-family:Code-Pro-JetBrains-Mono,ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,monospace;line-height:1.25rem;--cbp-tab-width:2;tab-size:var(--cbp-tab-width, 2)"><span style="display:block;padding:16px 0 0 16px;margin-bottom:-1px;width:100%;text-align:left;background-color:#0F111A"><svg xmlns="http://www.w3.org/2000/svg" width="54" height="14" viewBox="0 0 54 14"><g fill="none" fill-rule="evenodd" transform="translate(1 1)"><circle cx="6" cy="6" r="6" fill="#FF5F56" stroke="#E0443E" stroke-width=".5"></circle><circle cx="26" cy="6" r="6" fill="#FFBD2E" stroke="#DEA123" stroke-width=".5"></circle><circle cx="46" cy="6" r="6" fill="#27C93F" stroke="#1AAB29" stroke-width=".5"></circle></g></svg></span><span role="button" tabindex="0" data-code="G = Graph({ 29: [30, 46], 30: [31], 31: [32, 36, 45, 46], 32: [33, 36], 33: [34], 34: [35], 35: [36], 36: [37], 37: [38, 42], 38: [39, 42], 42: [43, 44], 43: [44], 44: [45], 45: [46] })

R_matrix = G.effective_resistance_matrix()

def R(u, v):
    return R_matrix[G.vertices().index(u)][G.vertices().index(v)]

def hitting_time(u, v):
    return 1/2 * sum(G.degree(w) * (R(u,v) + R(v,w) - R(u,w)) for w in G.vertices())

def avg_hitting_time(v):
    return mean([hitting_time(u, v) for u in G.vertices()])

{ v: avg_hitting_time(v) for v in G.vertices() }

# account for parity

H = G.tensor_product(graphs.CompleteGraph(2))
R_matrix = H.effective_resistance_matrix()

def R(u, v):
    return R_matrix[H.vertices().index(u)][H.vertices().index(v)]

def hitting_time(u, v):
    return 1/2 * sum(H.degree(w) * (R(u,v) + R(v,w) - R(u,w)) for w in H.vertices())

def avg_hitting_time(v):
    return mean([hitting_time((u,0),(v,0)) for u in G.vertices()])

{ v: avg_hitting_time(v) for v in G.vertices() }

# Final 

@CachedFunction
def H(routes=None):
    if routes is None:
        return G.tensor_product(graphs.CompleteGraph(2))
    else:
        x, y = routes
        graph = H(None).copy()
        graph.merge_vertices([(x, 0), (y, 1)])
        return graph

@CachedFunction
def R_matrix(routes):
    return H(routes).effective_resistance_matrix()

def hitting_time(routes, u, v):
    H0 = H(routes)
    R = lambda x,y: R_matrix(routes)[H0.vertices().index(x)][H0.vertices().index(y)]
    return 1/2 * sum(H0.degree(w) * (R(u,v) + R(v,w) - R(u,w)) for w in H0.vertices())

{
  (x, y): mean([ hitting_time((x,y), (u,0), (x,0)) for u in G.vertices() ])
  for (x, y) in [(30,31), (31,30), (35,36), (36,35), (36,37), (37,36), (45,46), (46,45)]
}" style="color:#babed8;display:none" aria-label="Copy" class="code-block-pro-copy-button"><svg xmlns="http://www.w3.org/2000/svg" style="width:24px;height:24px" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2"><path class="with-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2m-6 9l2 2 4-4"></path><path class="without-check" stroke-linecap="round" stroke-linejoin="round" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2"></path></svg></span><pre class="shiki material-theme-ocean" style="background-color: #0F111A" tabindex="0"><code><span class="line"><span style="color: #BABED8">G </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">Graph</span><span style="color: #89DDFF">({</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">29</span><span style="color: #89DDFF">:</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">30</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">46</span><span style="color: #89DDFF">],</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">30</span><span style="color: #89DDFF">:</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">31</span><span style="color: #89DDFF">],</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">31</span><span style="color: #89DDFF">:</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">32</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">36</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">45</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">46</span><span style="color: #89DDFF">],</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">32</span><span style="color: #89DDFF">:</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">33</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">36</span><span style="color: #89DDFF">],</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">33</span><span style="color: #89DDFF">:</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">34</span><span style="color: #89DDFF">],</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">34</span><span style="color: #89DDFF">:</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">35</span><span style="color: #89DDFF">],</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">35</span><span style="color: #89DDFF">:</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">36</span><span style="color: #89DDFF">],</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">36</span><span style="color: #89DDFF">:</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">37</span><span style="color: #89DDFF">],</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">37</span><span style="color: #89DDFF">:</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">38</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">42</span><span style="color: #89DDFF">],</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">38</span><span style="color: #89DDFF">:</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">39</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">42</span><span style="color: #89DDFF">],</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">42</span><span style="color: #89DDFF">:</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">43</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">44</span><span style="color: #89DDFF">],</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">43</span><span style="color: #89DDFF">:</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">44</span><span style="color: #89DDFF">],</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">44</span><span style="color: #89DDFF">:</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">45</span><span style="color: #89DDFF">],</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">45</span><span style="color: #89DDFF">:</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">[</span><span style="color: #F78C6C">46</span><span style="color: #89DDFF">]</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">})</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">R_matrix </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> G</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">effective_resistance_matrix</span><span style="color: #89DDFF">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">def</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">R</span><span style="color: #89DDFF">(</span><span style="color: #BABED8; font-style: italic">u</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #BABED8; font-style: italic">v</span><span style="color: #89DDFF">):</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #BABED8"> R_matrix</span><span style="color: #89DDFF">[</span><span style="color: #BABED8">G</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">vertices</span><span style="color: #89DDFF">().</span><span style="color: #82AAFF">index</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">u</span><span style="color: #89DDFF">)][</span><span style="color: #BABED8">G</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">vertices</span><span style="color: #89DDFF">().</span><span style="color: #82AAFF">index</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">v</span><span style="color: #89DDFF">)]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">def</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">hitting_time</span><span style="color: #89DDFF">(</span><span style="color: #BABED8; font-style: italic">u</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #BABED8; font-style: italic">v</span><span style="color: #89DDFF">):</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">/</span><span style="color: #F78C6C">2</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">*</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">sum</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">G</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">degree</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">w</span><span style="color: #89DDFF">)</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">*</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">R</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">u</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF">v</span><span style="color: #89DDFF">)</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">+</span><span style="color: #82AAFF"> R</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">v</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF">w</span><span style="color: #89DDFF">)</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">-</span><span style="color: #82AAFF"> R</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">u</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF">w</span><span style="color: #89DDFF">))</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #82AAFF"> w </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #82AAFF"> G</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">vertices</span><span style="color: #89DDFF">())</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">def</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">avg_hitting_time</span><span style="color: #89DDFF">(</span><span style="color: #BABED8; font-style: italic">v</span><span style="color: #89DDFF">):</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">mean</span><span style="color: #89DDFF">([</span><span style="color: #82AAFF">hitting_time</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">u</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> v</span><span style="color: #89DDFF">)</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #82AAFF"> u </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #82AAFF"> G</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">vertices</span><span style="color: #89DDFF">()])</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">{</span><span style="color: #BABED8"> v</span><span style="color: #89DDFF">:</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">avg_hitting_time</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">v</span><span style="color: #89DDFF">)</span><span style="color: #BABED8"> </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #BABED8"> v </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #BABED8"> G</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">vertices</span><span style="color: #89DDFF">()</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #464B5D; font-style: italic"># account for parity</span></span>
<span class="line"></span>
<span class="line"><span style="color: #BABED8">H </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> G</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">tensor_product</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">graphs</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">CompleteGraph</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">))</span></span>
<span class="line"><span style="color: #BABED8">R_matrix </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> H</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">effective_resistance_matrix</span><span style="color: #89DDFF">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">def</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">R</span><span style="color: #89DDFF">(</span><span style="color: #BABED8; font-style: italic">u</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #BABED8; font-style: italic">v</span><span style="color: #89DDFF">):</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #BABED8"> R_matrix</span><span style="color: #89DDFF">[</span><span style="color: #BABED8">H</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">vertices</span><span style="color: #89DDFF">().</span><span style="color: #82AAFF">index</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">u</span><span style="color: #89DDFF">)][</span><span style="color: #BABED8">H</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">vertices</span><span style="color: #89DDFF">().</span><span style="color: #82AAFF">index</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">v</span><span style="color: #89DDFF">)]</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">def</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">hitting_time</span><span style="color: #89DDFF">(</span><span style="color: #BABED8; font-style: italic">u</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #BABED8; font-style: italic">v</span><span style="color: #89DDFF">):</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">/</span><span style="color: #F78C6C">2</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">*</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">sum</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">H</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">degree</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">w</span><span style="color: #89DDFF">)</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">*</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">R</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">u</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF">v</span><span style="color: #89DDFF">)</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">+</span><span style="color: #82AAFF"> R</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">v</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF">w</span><span style="color: #89DDFF">)</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">-</span><span style="color: #82AAFF"> R</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">u</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF">w</span><span style="color: #89DDFF">))</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #82AAFF"> w </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #82AAFF"> H</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">vertices</span><span style="color: #89DDFF">())</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">def</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">avg_hitting_time</span><span style="color: #89DDFF">(</span><span style="color: #BABED8; font-style: italic">v</span><span style="color: #89DDFF">):</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">mean</span><span style="color: #89DDFF">([</span><span style="color: #82AAFF">hitting_time</span><span style="color: #89DDFF">((</span><span style="color: #82AAFF">u</span><span style="color: #89DDFF">,</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">),(</span><span style="color: #82AAFF">v</span><span style="color: #89DDFF">,</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">))</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #82AAFF"> u </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #82AAFF"> G</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">vertices</span><span style="color: #89DDFF">()])</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">{</span><span style="color: #BABED8"> v</span><span style="color: #89DDFF">:</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">avg_hitting_time</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">v</span><span style="color: #89DDFF">)</span><span style="color: #BABED8"> </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #BABED8"> v </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #BABED8"> G</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">vertices</span><span style="color: #89DDFF">()</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">}</span></span>
<span class="line"></span>
<span class="line"><span style="color: #464B5D; font-style: italic"># Final </span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">@</span><span style="color: #82AAFF">CachedFunction</span></span>
<span class="line"><span style="color: #C792EA">def</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">H</span><span style="color: #89DDFF">(</span><span style="color: #BABED8; font-style: italic">routes</span><span style="color: #89DDFF">=None):</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF; font-style: italic">if</span><span style="color: #BABED8"> routes </span><span style="color: #89DDFF">is</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">None:</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #BABED8"> G</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">tensor_product</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">graphs</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">CompleteGraph</span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">2</span><span style="color: #89DDFF">))</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF; font-style: italic">else</span><span style="color: #89DDFF">:</span></span>
<span class="line"><span style="color: #BABED8">        x</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> y </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> routes</span></span>
<span class="line"><span style="color: #BABED8">        graph </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">H</span><span style="color: #89DDFF">(None).</span><span style="color: #82AAFF">copy</span><span style="color: #89DDFF">()</span></span>
<span class="line"><span style="color: #BABED8">        graph</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">merge_vertices</span><span style="color: #89DDFF">([(</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">),</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">y</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">)])</span></span>
<span class="line"><span style="color: #BABED8">        </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #BABED8"> graph</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">@</span><span style="color: #82AAFF">CachedFunction</span></span>
<span class="line"><span style="color: #C792EA">def</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">R_matrix</span><span style="color: #89DDFF">(</span><span style="color: #BABED8; font-style: italic">routes</span><span style="color: #89DDFF">):</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">H</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">routes</span><span style="color: #89DDFF">).</span><span style="color: #82AAFF">effective_resistance_matrix</span><span style="color: #89DDFF">()</span></span>
<span class="line"></span>
<span class="line"><span style="color: #C792EA">def</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">hitting_time</span><span style="color: #89DDFF">(</span><span style="color: #BABED8; font-style: italic">routes</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #BABED8; font-style: italic">u</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> </span><span style="color: #BABED8; font-style: italic">v</span><span style="color: #89DDFF">):</span></span>
<span class="line"><span style="color: #BABED8">    H0 </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">H</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">routes</span><span style="color: #89DDFF">)</span></span>
<span class="line"><span style="color: #BABED8">    R </span><span style="color: #89DDFF">=</span><span style="color: #BABED8"> </span><span style="color: #C792EA">lambda</span><span style="color: #BABED8"> </span><span style="color: #BABED8; font-style: italic">x</span><span style="color: #89DDFF">,</span><span style="color: #BABED8; font-style: italic">y</span><span style="color: #89DDFF">:</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">R_matrix</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">routes</span><span style="color: #89DDFF">)[</span><span style="color: #BABED8">H0</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">vertices</span><span style="color: #89DDFF">().</span><span style="color: #82AAFF">index</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">)][</span><span style="color: #BABED8">H0</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">vertices</span><span style="color: #89DDFF">().</span><span style="color: #82AAFF">index</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">y</span><span style="color: #89DDFF">)]</span></span>
<span class="line"><span style="color: #BABED8">    </span><span style="color: #89DDFF; font-style: italic">return</span><span style="color: #BABED8"> </span><span style="color: #F78C6C">1</span><span style="color: #89DDFF">/</span><span style="color: #F78C6C">2</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">*</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">sum</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">H0</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">degree</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">w</span><span style="color: #89DDFF">)</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">*</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">R</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">u</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF">v</span><span style="color: #89DDFF">)</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">+</span><span style="color: #82AAFF"> R</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">v</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF">w</span><span style="color: #89DDFF">)</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">-</span><span style="color: #82AAFF"> R</span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">u</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF">w</span><span style="color: #89DDFF">))</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #82AAFF"> w </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #82AAFF"> H0</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">vertices</span><span style="color: #89DDFF">())</span></span>
<span class="line"></span>
<span class="line"><span style="color: #89DDFF">{</span></span>
<span class="line"><span style="color: #BABED8">  </span><span style="color: #89DDFF">(</span><span style="color: #BABED8">x</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> y</span><span style="color: #89DDFF">):</span><span style="color: #BABED8"> </span><span style="color: #82AAFF">mean</span><span style="color: #89DDFF">([</span><span style="color: #82AAFF"> hitting_time</span><span style="color: #89DDFF">((</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">,</span><span style="color: #82AAFF">y</span><span style="color: #89DDFF">),</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">u</span><span style="color: #89DDFF">,</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">),</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">(</span><span style="color: #82AAFF">x</span><span style="color: #89DDFF">,</span><span style="color: #F78C6C">0</span><span style="color: #89DDFF">))</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #82AAFF"> u </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #82AAFF"> G</span><span style="color: #89DDFF">.</span><span style="color: #82AAFF">vertices</span><span style="color: #89DDFF">()</span><span style="color: #82AAFF"> </span><span style="color: #89DDFF">])</span></span>
<span class="line"><span style="color: #BABED8">  </span><span style="color: #89DDFF; font-style: italic">for</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">(</span><span style="color: #BABED8">x</span><span style="color: #89DDFF">,</span><span style="color: #BABED8"> y</span><span style="color: #89DDFF">)</span><span style="color: #BABED8"> </span><span style="color: #89DDFF; font-style: italic">in</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">[(</span><span style="color: #F78C6C">30</span><span style="color: #89DDFF">,</span><span style="color: #F78C6C">31</span><span style="color: #89DDFF">),</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">31</span><span style="color: #89DDFF">,</span><span style="color: #F78C6C">30</span><span style="color: #89DDFF">),</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">35</span><span style="color: #89DDFF">,</span><span style="color: #F78C6C">36</span><span style="color: #89DDFF">),</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">36</span><span style="color: #89DDFF">,</span><span style="color: #F78C6C">35</span><span style="color: #89DDFF">),</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">36</span><span style="color: #89DDFF">,</span><span style="color: #F78C6C">37</span><span style="color: #89DDFF">),</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">37</span><span style="color: #89DDFF">,</span><span style="color: #F78C6C">36</span><span style="color: #89DDFF">),</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">45</span><span style="color: #89DDFF">,</span><span style="color: #F78C6C">46</span><span style="color: #89DDFF">),</span><span style="color: #BABED8"> </span><span style="color: #89DDFF">(</span><span style="color: #F78C6C">46</span><span style="color: #89DDFF">,</span><span style="color: #F78C6C">45</span><span style="color: #89DDFF">)]</span></span>
<span class="line"><span style="color: #89DDFF">}</span></span></code></pre></div>
</details>



<p>Although Raikou will on average arrive at Route 31 faster than any other route, the best place to catch the roaming legendary Pokémon is the boundary between <a href="https://bulbapedia.bulbagarden.net/wiki/Johto_Route_36">Johto Routes 36</a> and <a href="https://bulbapedia.bulbagarden.net/wiki/Johto_Route_37">37</a>. Hop back and forth between those two routes, and before you know it, you&#8217;ll be one step closer to completing your Pokédex!</p>


<ol class="wp-block-footnotes"><li id="52600543-9d44-47f5-b2a9-01e2163d9a04">Specifically, the calculations were done on the <a href="https://en.wikipedia.org/wiki/Tensor_product_of_graphs">tensor product</a> of <em>K<sub>2</sub></em> and the graph representing Raikou&#8217;s possible moves between the Johto routes. <a href="#52600543-9d44-47f5-b2a9-01e2163d9a04-link" aria-label="Jump to footnote reference 1"><img src="https://s.w.org/images/core/emoji/15.0.3/72x72/21a9.png" alt="↩" class="wp-smiley" style="height: 1em; max-height: 1em;" />︎</a></li></ol>]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>A submodular measure and approximate Gomory-Hu theorem for packing odd trails</title>
		<link>https://rosschurchley.com/2018/a-submodular-measure-and-approximate-gomory-hu-theorem-for-packing-odd-trails/</link>
		
		<dc:creator><![CDATA[Ross]]></dc:creator>
		<pubDate>Wed, 10 Jan 2018 23:00:00 +0000</pubDate>
				<category><![CDATA[Academic]]></category>
		<category><![CDATA[Math]]></category>
		<guid isPermaLink="false">https://rosschurchley.com/?p=297</guid>

					<description><![CDATA[Although I&#8217;ve left academia, Bojan Mohar and I have published a new paper in the proceedings of SODA exploring the &#8220;perimeter&#8221; measure that plays a key role in my doctoral research. It is mostly based on Chapter 4 of my PhD thesis.]]></description>
										<content:encoded><![CDATA[
<p>Although I&#8217;ve left academia, Bojan Mohar and I have published a new paper in the <a href="https://dl.acm.org/doi/10.5555/3174304.3175281">proceedings of SODA</a> exploring the &#8220;perimeter&#8221; measure that plays a key role in my doctoral research. It is mostly based on Chapter 4 of my <a href="https://rosschurchley.com/2017/phd-thesis/">PhD thesis</a>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Odd disjoint trails and totally odd graph immersions</title>
		<link>https://rosschurchley.com/2017/phd-thesis/</link>
		
		<dc:creator><![CDATA[Ross]]></dc:creator>
		<pubDate>Tue, 10 Jan 2017 23:00:00 +0000</pubDate>
				<category><![CDATA[Academic]]></category>
		<category><![CDATA[Math]]></category>
		<guid isPermaLink="false">https://rosschurchley.com/?p=293</guid>

					<description><![CDATA[I have succesfully defended my PhD thesis! It&#8217;s &#8220;packed&#8221; with results on graph immersions with parity restrictions, and &#8220;covers&#8221; odd edge-connectivity, totally odd clique immersions, and a new submodular measure that&#8217;s intimately connected with both. I am grateful to NSERC for funding my degree with a Alexander Graham Bell Canada Graduate Scholarship, and to my [&#8230;]]]></description>
										<content:encoded><![CDATA[
<p>I have succesfully defended my PhD thesis! It&#8217;s &#8220;packed&#8221; with results on graph immersions with parity restrictions, and &#8220;covers&#8221; odd edge-connectivity, totally odd clique immersions, and a new submodular measure that&#8217;s intimately connected with both.</p>



<p>I am grateful to NSERC for funding my degree with a Alexander Graham Bell Canada Graduate Scholarship, and to my supervisor Bojan Mohar.</p>



<span id="more-293"></span>



<blockquote class="wp-block-quote is-layout-flow wp-block-quote-is-layout-flow">
<p>The odd edge-connectivity between two vertices in a graph is the maximum number λ<sub>o</sub>(<em>u</em>,<strong>&nbsp;</strong><em>v</em>) of edge-disjoint (<em>u</em>,<strong>&nbsp;</strong><em>v</em>)-trails of odd length. In this thesis, we define the perimeter of a vertex-set, a natural upper bound for the odd edge-connectivity between some of its constituent pairs. Our central result is an approximate characterization of odd edge-connectivity: λ<sub>o</sub>(<em>u</em>,<strong>&nbsp;</strong><em>v</em>) is bounded above and below by constant factors of the usual edge-connectivity λ(<em>u</em>,<strong>&nbsp;</strong><em>v</em>) and/or the minimum perimeter among vertex-sets containing <em>u</em> and <em>v</em>.</p>



<p>The relationship between odd edge-connectivity and perimeter has many implications, most notably a loose packing–covering duality for odd trails. (In contrast, odd paths do not obey any such duality.) For Eulerian graphs, we obtain a second, independent proof of the packing–covering duality with a significantly better constant factor. Both proofs can be implemented as polynomial-time approximation algorithms for λ<sub>o</sub>(<em>u</em>,<strong>&nbsp;</strong><em>v</em>). After observing that perimeter satisfies a submodular inequality, we are able to prove an analogue of the Gomory–Hu Theorem for sets of minimum perimeter and, consequently, to construct an efficient data structure for storing approximate odd edge-connectivities for all vertex pairs in a graph.</p>



<p>The last part of the thesis studies more complicated systems of odd trails. A totally odd immersion of a graph <em>H</em> in another graph <em>G</em> is a representation in which vertices in <em>H</em> correspond to vertices in <em>G</em> and edges in <em>H</em> correspond to edge-disjoint odd trails in <em>G</em>. Using our perimeter version of the Gomory–Hu Theorem, we describe the rough structure of graphs with no totally odd immersion of the complete graph <em>K<sub>t</sub></em>. Finally, we suggest a totally odd immersion variant of Hadwiger’s Conjecture and show that it is true for almost all graphs.</p>
</blockquote>



<p>You can also read two papers published based on my results:</p>



<ul>
<li><a href="https://rosschurchley.com/2016/weak-duality-for-packing-edge-disjoint-odd-trails/">Weak duality for packing edge-disjoint odd trails</a></li>



<li><a href="https://rosschurchley.com/2018/a-submodular-measure-and-approximate-gomory-hu-theorem-for-packing-odd-trails/">A submodular measure and approximate Gomory–Hu theorem for packing odd trails</a></li>
</ul>



<p>or look at the slides I used at my defence:</p>



<div data-wp-interactive="core/file" class="wp-block-file"><object data-wp-bind--hidden="!state.hasPdfPreview"  class="wp-block-file__embed" data="https://rosschurchley.com/wp-content/uploads/2024/05/slides.pdf" type="application/pdf" style="width:100%;height:600px" aria-label="Embed of slides."></object><a id="wp-block-file--media-681513ce-50bf-42ea-abd1-168422ae2f17" href="https://rosschurchley.com/wp-content/uploads/2024/05/slides.pdf">slides</a><a href="https://rosschurchley.com/wp-content/uploads/2024/05/slides.pdf" class="wp-block-file__button wp-element-button" download aria-describedby="wp-block-file--media-681513ce-50bf-42ea-abd1-168422ae2f17">Download</a></div>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Weak duality for packing edge-disjoint odd trails</title>
		<link>https://rosschurchley.com/2016/weak-duality-for-packing-edge-disjoint-odd-trails/</link>
		
		<dc:creator><![CDATA[Ross]]></dc:creator>
		<pubDate>Sun, 10 Jan 2016 23:00:00 +0000</pubDate>
				<category><![CDATA[Academic]]></category>
		<category><![CDATA[Math]]></category>
		<guid isPermaLink="false">https://rosschurchley.com/?p=289</guid>

					<description><![CDATA[I have a new paper, coauthored with my supervisor Bojan Mohar and colleague Hehui Wu and presented at the SIAM Symposium on Discrete Algorithms! It is my first foray into graph immersions with parity restrictions. I am grateful to NSERC for supporting this research through an Alexander Graham Bell Canada Graduate Scholarship.]]></description>
										<content:encoded><![CDATA[
<p>I have a <a href="https://dl.acm.org/doi/10.5555/2884435.2884580">new paper</a>, coauthored with my supervisor Bojan Mohar and colleague Hehui Wu and presented at the SIAM Symposium on Discrete Algorithms! It is my first foray into graph immersions with parity restrictions.</p>



<p>I am grateful to NSERC for supporting this research through an Alexander Graham Bell Canada Graduate Scholarship.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>On the polarity and monopolarity of graphs</title>
		<link>https://rosschurchley.com/2013/on-the-polarity-and-monopolarity-of-graphs/</link>
		
		<dc:creator><![CDATA[Ross]]></dc:creator>
		<pubDate>Wed, 21 Aug 2013 22:00:00 +0000</pubDate>
				<category><![CDATA[Academic]]></category>
		<category><![CDATA[Math]]></category>
		<guid isPermaLink="false">https://rosschurchley.com/?p=279</guid>

					<description><![CDATA[I have a new paper published in Graphs and Combinatorics! It&#8217;s my favourite paper to come out of my research with Jing Huang at the University of Victoria — the third written chronologically, and the last to be published. The main result is that the structure of monopolar partitions in claw-free graphs can be fully [&#8230;]]]></description>
										<content:encoded><![CDATA[
<p>I have a <a href="https://doi.org/10.1002/jgt.21755">new paper</a> published in Graphs and Combinatorics! It&#8217;s my favourite paper to come out of my research with Jing Huang at the University of Victoria — the third written chronologically, and the last to be published. The main result is that the structure of monopolar partitions in claw-free graphs can be fully understood by looking at small subgraphs and following their direct implications on vertex pairs.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Tatami tilings</title>
		<link>https://rosschurchley.com/2013/tatami-tilings/</link>
		
		<dc:creator><![CDATA[Ross]]></dc:creator>
		<pubDate>Thu, 11 Apr 2013 22:00:00 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[Math]]></category>
		<guid isPermaLink="false">https://rosschurchley.com/?p=277</guid>

					<description><![CDATA[One of the most recognizable features of Japanese architecture is the matted flooring. The individual mats, called tatami, are made from rice straw and have a standard size and 1×2 rectangular shape. Tatami flooring has been widespread in Japan since the 17th and 18th centuries, but it took three hundred years before mathematicians got their [&#8230;]]]></description>
										<content:encoded><![CDATA[
<p>One of the most recognizable features of Japanese architecture is the matted flooring. The individual mats, called <a href="https://en.wikipedia.org/wiki/Tatami"><em>tatami</em></a>, are made from rice straw and have a standard size<sup data-fn="ec97b52b-044a-4993-ba57-a9a9ad011ccc" class="fn"><a href="#ec97b52b-044a-4993-ba57-a9a9ad011ccc" id="ec97b52b-044a-4993-ba57-a9a9ad011ccc-link">1</a></sup> and 1×2 rectangular shape. Tatami flooring has been widespread in Japan since the 17th and 18th centuries, but it took three hundred years before mathematicians got their hands on it.</p>



<span id="more-277"></span>



<p>According to the <a href="https://reatips.info/tatami-sikikata/">traditional rules</a> for arranging tatami, grid patterns called <em>bushūgishiki</em> (不祝儀敷き) are used only for funerals.<sup data-fn="a07d8047-ac6b-41de-92a2-77cbf5364fcb" class="fn"><a href="#a07d8047-ac6b-41de-92a2-77cbf5364fcb" id="a07d8047-ac6b-41de-92a2-77cbf5364fcb-link">2</a></sup> In all other situations, tatami mats are arranged in <em>shūgishiki</em> (祝儀敷き), where no four mats meet at the same point. In other words, the junctions between mats are allowed to form ┬, ┤, ┴, and ├ shapes but not ┼ shapes.</p>



<figure class="wp-block-image size-full"><img decoding="async" width="1600" height="900" src="https://rosschurchley.com/wp-content/uploads/2024/05/tatami-patterns.webp" alt="Two traditional tatami layouts." class="wp-image-622" srcset="https://rosschurchley.com/wp-content/uploads/2024/05/tatami-patterns.webp 1600w, https://rosschurchley.com/wp-content/uploads/2024/05/tatami-patterns-800x450.webp 800w, https://rosschurchley.com/wp-content/uploads/2024/05/tatami-patterns-768x432.webp 768w, https://rosschurchley.com/wp-content/uploads/2024/05/tatami-patterns-1536x864.webp 1536w" sizes="(max-width: 1600px) 100vw, 1600px" /><figcaption class="wp-element-caption">Two traditional tatami layouts. The layout on the left follows the no-four-corners rule of <em>shūgishiki</em>. The grid layout on the right is a <em>bushūgishiki</em>, a &#8220;layout for sad occasions&#8221;.</figcaption></figure>



<p><em>Shūgishiki</em> tatami arrangements were first considered as combinatorial objects by Kotani in 2001 and gained some attention after Knuth including them in <em>The Art of Computer Programming</em>.</p>



<h2 class="wp-block-heading">Construction</h2>



<p>Once you lay down the first couple tatami, you&#8217;ll find there aren&#8217;t many ways to extend them to a <em>shūgishiki</em>. For example, two side-by-side tatami force the position of all of the surrounding mats until you hit a wall.</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="1600" height="500" src="https://rosschurchley.com/wp-content/uploads/2013/04/tatami-construction.webp" alt="Two side-by-side tatami force the arrangement of an entire square." class="wp-image-623" srcset="https://rosschurchley.com/wp-content/uploads/2013/04/tatami-construction.webp 1600w, https://rosschurchley.com/wp-content/uploads/2013/04/tatami-construction-800x250.webp 800w, https://rosschurchley.com/wp-content/uploads/2013/04/tatami-construction-768x240.webp 768w, https://rosschurchley.com/wp-content/uploads/2013/04/tatami-construction-1536x480.webp 1536w" sizes="(max-width: 1600px) 100vw, 1600px" /><figcaption class="wp-element-caption">Two side-by-side tatami force the arrangement of an entire m×m square.</figcaption></figure>



<p>This observation can be used to <a href="https://oeis.org/A068920">decompose</a> rectangular <em>shūgishiki</em> into</p>



<ul>
<li>(m−2)×m blocks forced by vertical tatami,</li>



<li>m×m blocks forced by horizontal tatami, and</li>



<li>1×m strips of vertical tiles,</li>
</ul>



<p>and to <a href="https://doi.org/10.37236/215">derive</a> their generating function</p>



<div class="wp-block-katex-display-block katex-eq" data-katex-display="true"><pre>T(x) = \frac{(1+x)(1+x^{m-2}+x^m)}{1-x^{m-1}-x^{m+1}}</pre></div>



<h2 class="wp-block-heading">Including half-tatami</h2>



<p>Four-and-a-half tatami rooms can also be found in Japanese homes and tea houses, so naturally mathematicians have also looked into tatami tilings with half-tatami. Alejandro Erickson&#8217;s <a href="https://hdl.handle.net/1828/4902">PhD thesis</a> reviews and extends the research into this area. Alejandro has also <a href="https://alejandroerickson.com/2016/07/02/tomoku-80-challenging-puzzles.html">published a book of puzzles</a> about tatami layouts.</p>


<ol class="wp-block-footnotes"><li id="ec97b52b-044a-4993-ba57-a9a9ad011ccc">Floor space in Japan is commonly quoted in terms of the <a href="https://en.wikipedia.org/wiki/Ken_(unit)">length of a tatami mat</a>. <a href="#ec97b52b-044a-4993-ba57-a9a9ad011ccc-link" aria-label="Jump to footnote reference 1"><img src="https://s.w.org/images/core/emoji/15.0.3/72x72/21a9.png" alt="↩" class="wp-smiley" style="height: 1em; max-height: 1em;" />︎</a></li><li id="a07d8047-ac6b-41de-92a2-77cbf5364fcb">In reality, grid layouts are also used for practical reasons in inns, temples, and other large gathering halls. <a href="#a07d8047-ac6b-41de-92a2-77cbf5364fcb-link" aria-label="Jump to footnote reference 2"><img src="https://s.w.org/images/core/emoji/15.0.3/72x72/21a9.png" alt="↩" class="wp-smiley" style="height: 1em; max-height: 1em;" />︎</a></li></ol>]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Solving partition problems with colour-bipartitions</title>
		<link>https://rosschurchley.com/2012/solving-partition-problems-with-colour-bipartitions/</link>
		
		<dc:creator><![CDATA[Ross]]></dc:creator>
		<pubDate>Wed, 28 Nov 2012 23:00:00 +0000</pubDate>
				<category><![CDATA[Academic]]></category>
		<category><![CDATA[Math]]></category>
		<guid isPermaLink="false">https://rosschurchley.com/?p=273</guid>

					<description><![CDATA[I have a new paper with Jing Huang in Graphs and Combinatorics! This was the culmination of my undergraduate research, and shows that a single strategy can be used to solve the monopolar partition problem in all graph classes for which the problem was previously known to be tractable, including line graphs and claw-free graphs. [&#8230;]]]></description>
										<content:encoded><![CDATA[
<p>I have <a href="https://doi.org/10.1007/s00373-012-1270-z">a new paper</a> with Jing Huang in Graphs and Combinatorics! This was the culmination of my undergraduate research, and shows that a single strategy can be used to solve the monopolar partition problem in all graph classes for which the problem was previously known to be tractable, including <a href="https://rosschurchley.com/2011/line-polar-graphs-characterization-and-recognition/">line graphs</a> and <a href="https://rosschurchley.com/2013/on-the-polarity-and-monopolarity-of-graphs/">claw-free graphs</a>.</p>



<p>This research was completed in the summer of 2010, my last undergraduate research term. I am grateful to NSERC for funding my work with a Undergraduate Student Research Award, and to my supervisor and coauthor Jing Huang.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>On graph-transverse matchings</title>
		<link>https://rosschurchley.com/2012/msc-thesis/</link>
		
		<dc:creator><![CDATA[Ross]]></dc:creator>
		<pubDate>Mon, 20 Aug 2012 22:00:00 +0000</pubDate>
				<category><![CDATA[Academic]]></category>
		<category><![CDATA[Math]]></category>
		<guid isPermaLink="false">https://rosschurchley.com/?p=267</guid>

					<description><![CDATA[I have successfully defended my master’s thesis on graph-transverse matching problems! It considers the computational complexity of deciding whether a given graph admits a matching which covers every copy of a fixed tree or cycle. The thesis is related to my previous work on cycle-transverse matchings and P4-transverse matchings and, roughly speaking, shows that H-transverse [&#8230;]]]></description>
										<content:encoded><![CDATA[
<p>I have successfully defended <a href="https://hdl.handle.net/1828/4137">my master’s thesis</a> on graph-transverse matching problems! It considers the computational complexity of deciding whether a given graph admits a matching which covers every copy of a fixed tree or cycle.</p>



<p>The thesis is related to my previous work on <a href="https://rosschurchley.com/2011/complexity-of-cycle-transverse-matching-problems/">cycle-transverse matchings</a> and <a href="https://rosschurchley.com/2011/line-polar-graphs-characterization-and-recognition/"><em>P</em><sub>4</sub>-transverse matchings</a> and, roughly speaking, shows that <em>H</em>-transverse matchings are NP-hard to find when <em>H</em> is a big cycle or tree, and tractable when <em>H</em> is a triangle or a small tree.</p>



<span id="more-267"></span>



<blockquote class="wp-block-quote is-layout-flow wp-block-quote-is-layout-flow">
<p>Given graphs <em>G</em>, <em>H</em>, is it possible to find a matching which, when deleted from <em>G</em>, destroys all copies of <em>H</em>? The answer is obvious for some inputs—notably, when <em>G</em> is a large complete graph the answer is &#8220;no&#8221; — but in general this can be a very difficult question. In this thesis, we study this decision problem when <em>H</em> is a fixed tree or cycle; our aim is to identify those <em>H</em> for which it can be solved efficiently.</p>



<p>The <em>H</em>-transverse matching problem, TM(<em>H</em>) for short, asks whether an input graph admits a matching <em>M</em> such that no subgraph of <em>G</em>−<em>M</em> is isomorphic to <em>H</em>. The main goal of this thesis is the following dichotomy. When <em>H</em> is a triangle or one of a few small-diameter trees, there is a polynomial-time algorithm to find an <em>H</em>-transverse matching if one exists. However, TM(<em>H</em>) is NP-complete when <em>H</em> is any longer cycle or a tree of diameter ≥ 4. In addition, we study the restriction of these problems to structured graph classes.</p>
</blockquote>



<p>I am grateful to NSERC for funding my degree with a Alexander Graham Bell Canada Graduate Scholarship, and to my supervisor Jing Huang.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Colonialism and the Four-Colour Theorem</title>
		<link>https://rosschurchley.com/2012/colonialism-and-the-four-colour-theorem/</link>
		
		<dc:creator><![CDATA[Ross]]></dc:creator>
		<pubDate>Tue, 31 Jul 2012 22:00:00 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[History]]></category>
		<category><![CDATA[Math]]></category>
		<guid isPermaLink="false">https://rosschurchley.com/?p=16</guid>

					<description><![CDATA[<img width="1723" height="969" src="https://rosschurchley.com/wp-content/uploads/2012/07/British-Possessions-and-Colonies-jpg.webp" class="attachment-large size-large wp-post-image" alt="A historical map of Africa, with an overlaid diagram showing adjacencies between European claims." decoding="async" loading="lazy" srcset="https://rosschurchley.com/wp-content/uploads/2012/07/British-Possessions-and-Colonies-jpg.webp 1723w, https://rosschurchley.com/wp-content/uploads/2012/07/British-Possessions-and-Colonies-800x450.webp 800w, https://rosschurchley.com/wp-content/uploads/2012/07/British-Possessions-and-Colonies-768x432.webp 768w, https://rosschurchley.com/wp-content/uploads/2012/07/British-Possessions-and-Colonies-1536x864.webp 1536w" sizes="(max-width: 1723px) 100vw, 1723px" />In 1852, then-student Francis Guthrie wondered any if possible map required more than four colours. By the end of the century, Guthrie and his fellow colonists had drawn a map on Africa that needed five. The&#160;Four-Colour Theorem&#160;says that, no matter what the borders on your map are, you only need four colours to make sure [&#8230;]]]></description>
										<content:encoded><![CDATA[<img width="1723" height="969" src="https://rosschurchley.com/wp-content/uploads/2012/07/British-Possessions-and-Colonies-jpg.webp" class="attachment-large size-large wp-post-image" alt="A historical map of Africa, with an overlaid diagram showing adjacencies between European claims." decoding="async" loading="lazy" srcset="https://rosschurchley.com/wp-content/uploads/2012/07/British-Possessions-and-Colonies-jpg.webp 1723w, https://rosschurchley.com/wp-content/uploads/2012/07/British-Possessions-and-Colonies-800x450.webp 800w, https://rosschurchley.com/wp-content/uploads/2012/07/British-Possessions-and-Colonies-768x432.webp 768w, https://rosschurchley.com/wp-content/uploads/2012/07/British-Possessions-and-Colonies-1536x864.webp 1536w" sizes="(max-width: 1723px) 100vw, 1723px" />
<p>In 1852, then-student Francis Guthrie wondered any if possible map required more than four colours. By the end of the century, Guthrie and his fellow colonists had drawn a map on Africa that needed five.</p>



<span id="more-16"></span>



<p>The&nbsp;<a href="https://en.wikipedia.org/wiki/Four_color_theorem">Four-Colour Theorem</a>&nbsp;says that, no matter what the borders on your map are, you only need four colours to make sure that neighbouring regions are coloured differently. The theorem doesn’t apply if you let some regions claim other disconnected regions as their own, and in fact&nbsp;the map&nbsp;of European claims on Africa required five colours by the end of the 19th century.</p>



<figure class="wp-block-image size-large"><img loading="lazy" decoding="async" width="1699" height="1280" src="https://rosschurchley.com/wp-content/uploads/2024/05/colonized-africa-1699x1280.webp" alt="A British map of Africa published in 1899." class="wp-image-24" srcset="https://rosschurchley.com/wp-content/uploads/2024/05/colonized-africa-1699x1280.webp 1699w, https://rosschurchley.com/wp-content/uploads/2024/05/colonized-africa-797x600.webp 797w, https://rosschurchley.com/wp-content/uploads/2024/05/colonized-africa-768x578.webp 768w, https://rosschurchley.com/wp-content/uploads/2024/05/colonized-africa-1536x1157.webp 1536w, https://rosschurchley.com/wp-content/uploads/2024/05/colonized-africa-2048x1543.webp 2048w" sizes="(max-width: 1699px) 100vw, 1699px" /><figcaption class="wp-element-caption">A map of Africa published in 1899. (<a href="https://www.flickr.com/photos/britishlibrary/11249453394/" data-type="link" data-id="https://www.flickr.com/photos/britishlibrary/11249453394/">William Balfour Irvine / British Library</a>)</figcaption></figure>



<p><a href="https://en.wikipedia.org/wiki/Francis_Guthrie">Francis Guthrie</a>, who moved to the South African&nbsp;<a href="https://en.wikipedia.org/wiki/Cape_Colony">Cape Colony</a>&nbsp;in 1861, could well have owned a map like the above. Five colours are necessary to properly colour the land that Britain (red), France (orange), Portugal (yellow), Germany (green), and Belgium’s King Leopold II (purple) decided should belong to them.</p>



<p>Five territorities in the center are key to the map colouring:</p>



<figure class="wp-block-table"><table><thead><tr><th></th><th>Area</th><th>Colonizer</th></tr></thead><tbody><tr><td><img src="https://s.w.org/images/core/emoji/15.0.3/72x72/1f7e3.png" alt="🟣" class="wp-smiley" style="height: 1em; max-height: 1em;" /></td><td><a href="https://en.wikipedia.org/wiki/Congo_Basin">Congo basin</a></td><td><a href="https://en.wikipedia.org/wiki/Congo_Free_State">King Leopold II</a></td></tr><tr><td><img src="https://s.w.org/images/core/emoji/15.0.3/72x72/1f7e0.png" alt="🟠" class="wp-smiley" style="height: 1em; max-height: 1em;" /></td><td>north of the Congo</td><td><a href="https://en.wikipedia.org/wiki/French_Congo">France</a></td></tr><tr><td><img src="https://s.w.org/images/core/emoji/15.0.3/72x72/1f7e1.png" alt="🟡" class="wp-smiley" style="height: 1em; max-height: 1em;" /></td><td>south of the&nbsp;<a href="https://en.wikipedia.org/wiki/Kwango_River">Kwango</a></td><td><a href="https://en.wikipedia.org/wiki/Colonial_history_of_Angola">Portugal</a></td></tr><tr><td><img src="https://s.w.org/images/core/emoji/15.0.3/72x72/1f534.png" alt="🔴" class="wp-smiley" style="height: 1em; max-height: 1em;" /></td><td>upper&nbsp;<a href="https://en.wikipedia.org/wiki/Zambezi">Zambezi basin</a></td><td><a href="https://en.wikipedia.org/wiki/Company_rule_in_Rhodesia">Britain</a></td></tr><tr><td><img src="https://s.w.org/images/core/emoji/15.0.3/72x72/1f7e2.png" alt="🟢" class="wp-smiley" style="height: 1em; max-height: 1em;" /></td><td><a href="https://en.wikipedia.org/wiki/African_Great_Lakes">African Great Lakes</a></td><td><a href="https://en.wikipedia.org/wiki/German_East_Africa">Germany</a></td></tr></tbody></table></figure>



<p>The boundaries between these colonies separate seven different pairs of empires. Borders between other African colonies account for the other three possible sets of neighbours:</p>



<ul>
<li>French Congo was next to German&nbsp;<a href="https://en.wikipedia.org/wiki/Kamerun">Kamerun</a>;</li>



<li>German East Africa to&nbsp;<a href="https://en.wikipedia.org/wiki/Portuguese_Mozambique">Portuguese Mozambique</a>; and</li>



<li>French claims in the&nbsp;<a href="https://en.wikipedia.org/wiki/Ubangi-Shari">Ubangi-Chari area</a>&nbsp;were next to&nbsp;<a href="https://en.wikipedia.org/wiki/Anglo-Egyptian_Sudan">Anglo-Egyption Sudan</a>.</li>
</ul>



<p>In short, the adjacency graph between these empires was the complete graph&nbsp;<em>K<sub>5</sub>​</em>.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>How to catch legendary Pokémon (in theory)</title>
		<link>https://rosschurchley.com/2012/how-to-catch-legendary-pokemon/</link>
		
		<dc:creator><![CDATA[Ross]]></dc:creator>
		<pubDate>Mon, 06 Feb 2012 23:00:00 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[Math]]></category>
		<category><![CDATA[Pokémon]]></category>
		<guid isPermaLink="false">https://rosschurchley.com/?p=263</guid>

					<description><![CDATA[<img width="1600" height="900" src="https://rosschurchley.com/wp-content/uploads/2012/02/Entei.webp" class="attachment-large size-large wp-post-image" alt="The roaming Pokémon Entei, depicted in the style of the cover Bonato and Nowakowski&#039;s Cops and Robbers textbook." decoding="async" loading="lazy" srcset="https://rosschurchley.com/wp-content/uploads/2012/02/Entei.webp 1600w, https://rosschurchley.com/wp-content/uploads/2012/02/Entei-800x450.webp 800w, https://rosschurchley.com/wp-content/uploads/2012/02/Entei-768x432.webp 768w, https://rosschurchley.com/wp-content/uploads/2012/02/Entei-1536x864.webp 1536w" sizes="(max-width: 1600px) 100vw, 1600px" />Pokémon Gold and Silver introduced the roaming legendary beasts: three one-of-a-kind Pokémon that move from route to route instead of sticking to a fixed habitat. Catching a roaming Pokémon amounts to winning a graph pursuit game — so what can we learn about it from the latest mathematical results? To review the Pokémon mechanics, each [&#8230;]]]></description>
										<content:encoded><![CDATA[<img width="1600" height="900" src="https://rosschurchley.com/wp-content/uploads/2012/02/Entei.webp" class="attachment-large size-large wp-post-image" alt="The roaming Pokémon Entei, depicted in the style of the cover Bonato and Nowakowski&#039;s Cops and Robbers textbook." decoding="async" loading="lazy" srcset="https://rosschurchley.com/wp-content/uploads/2012/02/Entei.webp 1600w, https://rosschurchley.com/wp-content/uploads/2012/02/Entei-800x450.webp 800w, https://rosschurchley.com/wp-content/uploads/2012/02/Entei-768x432.webp 768w, https://rosschurchley.com/wp-content/uploads/2012/02/Entei-1536x864.webp 1536w" sizes="(max-width: 1600px) 100vw, 1600px" />
<p><em>Pokémon Gold</em> and <em>Silver</em> introduced the roaming legendary beasts: three one-of-a-kind Pokémon that move from route to route instead of sticking to a fixed habitat. Catching a roaming Pokémon amounts to winning a <a href="https://en.wikipedia.org/wiki/Pursuit-evasion">graph pursuit game</a> — so what can we learn about it from the latest mathematical results?</p>



<span id="more-263"></span>



<p>To review the Pokémon mechanics, each species can normally be found in a handful of fixed habitats. If you want to catch Abra, you go to Route 24; if you&#8217;re looking for Jigglypuff, head to Route 46.</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="960" height="432" src="https://rosschurchley.com/wp-content/uploads/2024/05/jigglypuff-location.webp" alt="A screenshot of Jigglypuff's Pokédex entry and map locations." class="wp-image-420" srcset="https://rosschurchley.com/wp-content/uploads/2024/05/jigglypuff-location.webp 960w, https://rosschurchley.com/wp-content/uploads/2024/05/jigglypuff-location-800x360.webp 800w, https://rosschurchley.com/wp-content/uploads/2024/05/jigglypuff-location-768x346.webp 768w" sizes="(max-width: 960px) 100vw, 960px" /><figcaption class="wp-element-caption">Jigglypuff can always be found on Route 46.</figcaption></figure>



<p>The legendary Entei, Raikou, and Suicune<sup data-fn="53b351db-4942-4cbe-920f-55bd9d054c33" class="fn"><a href="#53b351db-4942-4cbe-920f-55bd9d054c33" id="53b351db-4942-4cbe-920f-55bd9d054c33-link">1</a></sup> are different. There&#8217;s only one of each species, each situated on a random route. Each time the player character moves to a new location, the roaming Pokémon each move to a randomly-selected route adjacent to the one they were just on. In graph theory terms, the player and Pokémon are engaged in a pursuit game where the Pokémon&#8217;s strategy follows a random walk.</p>



<p>The study of graph pursuit games is a fascinating and active <a href="https://math.ryerson.ca/~abonato/copsandrobbers.html">area of research</a>. Classically, researchers have asked how many &#8220;cops&#8221; it takes to guarantee the capture of an evasive &#8220;robber&#8221; travelling around a graph. Depending on the graph, many cops might be needed to catch a clever robber; there is a <a href="https://arxiv.org/abs/1308.3385">deep open problem</a> about the worst-case cop numbers of large graphs.</p>



<p>Because the graph corresponding to the Pokémon region of Johto contains a long cycle as an isometric subgraph, its cop number is more than one — in other words, it&#8217;s possible that a roaming Pokémon could theoretically evade a lone Pokémon trainer forever! Fortunately, the legendary beasts play randomly, not perfectly, so the worst-case scenario doesn&#8217;t apply.</p>



<p>A random walk in an arbitrary <em>n</em>-vertex, <em>m</em>-edge graph <a href="https://www.cse.cuhk.edu.hk/~cslui/CMSC5734/LovaszRadnomWalks93.pdf">can be expected</a> to spend deg(<em>v</em>)/(2<em>m</em>) of its time at each location <em>v</em>, and to visit the whole graph after <a href="https://doi.org/10.1002/rsa.3240060106">at most</a> roughly 4<em>n</em><sup>3</sup>/27 steps. So any trainer who isn&#8217;t actively trying to avoid Entei should end up bumping into it eventually — and an intelligent trainer should be able to do much better.</p>



<p>The first place to start is the &#8220;greedy&#8221; strategy I originally tried as a kid: every time Entei moves, check the map, and move to any route that gets me closer to them. After Entei makes its random move, the distance between us could be unchanged (with Entei’s move offsetting mine), or it could go down by one, or it could go down by two in the lucky 1/Δ chance that Entei moves towards me. If I start at a distance of ℓ steps away from Entei and get lucky ℓ/2 times, I’ll have caught up — so using a negative binomial distribution bound,</p>



<div class="wp-block-katex-display-block katex-eq" data-katex-display="true"><pre>\text{E[capture time]} \leq \frac{\Delta \ell}{2}.</pre></div>



<p>In the grand scheme of things, this isn’t too bad — especially if Δ is low. But it still takes a frustratingly large time for a 12-year-old, and in general it’s possible to do better.</p>



<figure class="wp-block-image size-full"><img loading="lazy" decoding="async" width="1600" height="900" src="https://rosschurchley.com/wp-content/uploads/2024/05/professor-elm-meyniel.webp" alt="The Pokémon character Professor Elm in front of a chalkboard showing the cop number of three graphs." class="wp-image-421" srcset="https://rosschurchley.com/wp-content/uploads/2024/05/professor-elm-meyniel.webp 1600w, https://rosschurchley.com/wp-content/uploads/2024/05/professor-elm-meyniel-800x450.webp 800w, https://rosschurchley.com/wp-content/uploads/2024/05/professor-elm-meyniel-768x432.webp 768w, https://rosschurchley.com/wp-content/uploads/2024/05/professor-elm-meyniel-1536x864.webp 1536w" sizes="(max-width: 1600px) 100vw, 1600px" /><figcaption class="wp-element-caption">Professor Elm ponders some results and conjectures about graph pursuit games.</figcaption></figure>



<p>Recently, Peter Winkler and Natasha Komarov <a href="https://arxiv.org/abs/1305.4559">found a strategy</a> for general graphs which gives a better bound on the expected capture time. Somewhat counterintuitively, it involves aiming for where the robber was — rather than their current location — until the cop is very close to catching him. The Komarov-Winkler strategy has an expected capture time of <em>n</em>+o(<em>n</em>), where <em>n</em> is the number of locations on the map. This is essentially best possible on certain graphs, and is better than the above Δℓ/2 bound when the graph has vertices with large degree.</p>



<p>For graphs without high-degree vertices — like the Pokémon world map — it is possible that a simpler solution could beat the Komarov–Winkler strategy. The problem is: simpler strategies may not be simpler to analyse. In <a href="https://www.math.cmu.edu/~nkomarov/NKThesis.pdf">her PhD thesis</a>, Natasha wondered whether a greedy algorithm with random tiebreakers could guarantee <em>n</em>+o(<em>n</em>) expected capture time. It is an open question to find a general bound for the &#8220;randomly greedy&#8221; strategy&#8217;s expected performance that would prove her right.</p>


<ol class="wp-block-footnotes"><li id="53b351db-4942-4cbe-920f-55bd9d054c33">I&#8217;m including Suicune in this list since it roamed in the original <em>Gold</em> and <em>Silver</em>, but its behaviour is different from the others in <em>Pokémon Crystal</em>, <em>HeartGold</em>, and <em>SoulSilver</em>. <a href="#53b351db-4942-4cbe-920f-55bd9d054c33-link" aria-label="Jump to footnote reference 1"><img src="https://s.w.org/images/core/emoji/15.0.3/72x72/21a9.png" alt="↩" class="wp-smiley" style="height: 1em; max-height: 1em;" />︎</a></li></ol>]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Complexity of cycle-transverse matching problems</title>
		<link>https://rosschurchley.com/2011/complexity-of-cycle-transverse-matching-problems/</link>
		
		<dc:creator><![CDATA[Ross]]></dc:creator>
		<pubDate>Sat, 31 Dec 2011 23:00:00 +0000</pubDate>
				<category><![CDATA[Academic]]></category>
		<category><![CDATA[Math]]></category>
		<guid isPermaLink="false">https://rosschurchley.com/?p=259</guid>

					<description><![CDATA[Earlier this year, I presented the first results of what would become my master&#8217;s thesis at the International Workshop on Combinatorial Algorithms. The paper, coauthored with Jing Huang and Xuding Zhu, has now been published in the LNCS proceedings. It studies the computational complexity of the following problem: in a given graph, is there a [&#8230;]]]></description>
										<content:encoded><![CDATA[
<p>Earlier this year, I presented the first results of what would become my master&#8217;s thesis at the International Workshop on Combinatorial Algorithms. The paper, coauthored with Jing Huang and Xuding Zhu, has now been published in the <a href="https://doi.org/10.1007/978-3-642-25011-8_11">LNCS proceedings</a>. It studies the computational complexity of the following problem: in a given graph, is there a matching which breaks all cycles of a given length?</p>



<p>I am grateful to NSERC for funding this research with a Alexander Graham Bell Canada Graduate Scholarship.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>List-monopolar partitions of claw-free graphs</title>
		<link>https://rosschurchley.com/2011/list-monopolar-partitions-of-claw-free-graphs/</link>
		
		<dc:creator><![CDATA[Ross]]></dc:creator>
		<pubDate>Thu, 15 Sep 2011 22:00:00 +0000</pubDate>
				<category><![CDATA[Academic]]></category>
		<category><![CDATA[Math]]></category>
		<guid isPermaLink="false">https://rosschurchley.com/?p=257</guid>

					<description><![CDATA[Shortly after solving the monopolar partition problem for line graphs, Jing Huang and I realized that our solution could be used to solve the &#8220;precoloured&#8221; version of the problem, and then further extended to claw-free graphs. Jing presented our result at the French Combinatorial Conference and the proceedings have now been published in Discrete Mathematics.]]></description>
										<content:encoded><![CDATA[
<p>Shortly after solving the monopolar partition problem for line graphs, Jing Huang and I realized that our solution could be used to solve the &#8220;precoloured&#8221; version of the problem, and then further extended to claw-free graphs. Jing presented our result at the French Combinatorial Conference and the proceedings have <a href="https://doi.org/10.1016/j.disc.2011.08.022">now been published</a> in Discrete Mathematics.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Line-polar graphs: characterization and recognition</title>
		<link>https://rosschurchley.com/2011/line-polar-graphs-characterization-and-recognition/</link>
		
		<dc:creator><![CDATA[Ross]]></dc:creator>
		<pubDate>Thu, 25 Aug 2011 22:00:00 +0000</pubDate>
				<category><![CDATA[Academic]]></category>
		<category><![CDATA[Math]]></category>
		<guid isPermaLink="false">https://rosschurchley.com/?p=255</guid>

					<description><![CDATA[I&#8217;ve published a new paper in the SIAM Journal on Discrete Mathematics! The work is the result of the research term I took as an undergraduate in the summer of 2009. It studies the edge versions of the monopolar and polar partition problems, and presents a linear-time solution to both. I am grateful to NSERC [&#8230;]]]></description>
										<content:encoded><![CDATA[
<p>I&#8217;ve published <a href="https://doi.org/10.1137/100789208">a new paper</a> in the SIAM Journal on Discrete Mathematics! The work is the result of the research term I took as an undergraduate in the summer of 2009. It studies the edge versions of the monopolar and polar partition problems, and presents a linear-time solution to both.</p>



<p>I am grateful to NSERC for funding my work with a Undergraduate Student Research Award, and to my supervisor and coauthor Jing Huang.</p>
]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Graph theory haiku</title>
		<link>https://rosschurchley.com/2010/graph-theory-haiku/</link>
		
		<dc:creator><![CDATA[Ross]]></dc:creator>
		<pubDate>Mon, 22 Nov 2010 23:00:00 +0000</pubDate>
				<category><![CDATA[Blog]]></category>
		<category><![CDATA[Math]]></category>
		<guid isPermaLink="false">https://rosschurchley.com/?p=251</guid>

					<description><![CDATA[My most recent talk in UVic’s discrete math seminar presented three poetic proofs by Adrian Bondy&#8230; and three actual poems summarizing the ideas in each one.]]></description>
										<content:encoded><![CDATA[
<p>My most recent talk in UVic’s discrete math seminar presented three poetic proofs <a href="https://doi.org/10.1002/jgt.10135">by Adrian Bondy</a>&#8230; and three actual poems summarizing the ideas in each one.</p>



<span id="more-251"></span>



<div data-wp-interactive="core/file" class="wp-block-file"><object data-wp-bind--hidden="!state.hasPdfPreview"  class="wp-block-file__embed" data="https://rosschurchley.com/wp-content/uploads/2024/05/talk.pdf" type="application/pdf" style="width:100%;height:600px" aria-label="Embed of Slides of the talk."></object><a id="wp-block-file--media-0bd7e92a-a19e-440c-8ae1-3475f6c7c0cb" href="https://rosschurchley.com/wp-content/uploads/2024/05/talk.pdf">Slides of the talk</a><a href="https://rosschurchley.com/wp-content/uploads/2024/05/talk.pdf" class="wp-block-file__button wp-element-button" download aria-describedby="wp-block-file--media-0bd7e92a-a19e-440c-8ae1-3475f6c7c0cb">Download</a></div>


]]></content:encoded>
					
		
		
			</item>
		<item>
		<title>Exponential growth in Katamari Damacy</title>
		<link>https://rosschurchley.com/2007/exponential-growth-in-katamari-damacy/</link>
		
		<dc:creator><![CDATA[Ross]]></dc:creator>
		<pubDate>Wed, 10 Oct 2007 22:00:00 +0000</pubDate>
				<category><![CDATA[Snippets]]></category>
		<category><![CDATA[Katamari Damacy]]></category>
		<category><![CDATA[Math]]></category>
		<guid isPermaLink="false">https://rosschurchley.com/?p=243</guid>

					<description><![CDATA[One of my favourite video games of all time is the inexplicable Katamari Damacy. Its quirky premise involves, as Wikipedia puts it, &#8220;a diminutive prince rolling a magical, highly adhesive ball around various locations, collecting increasingly larger objects until the ball has grown great enough to become a star.&#8221; In other words, it&#8217;s the most [&#8230;]]]></description>
										<content:encoded><![CDATA[
<p>One of my favourite video games of all time is the inexplicable <a href="https://en.wikipedia.org/wiki/Katamari_Damacy"><em>Katamari Damacy</em></a>. Its quirky premise involves, as Wikipedia puts it, &#8220;a diminutive prince rolling a magical, highly adhesive ball around various locations, collecting increasingly larger objects until the ball has grown great enough to become a star.&#8221; In other words, it&#8217;s the most successful game ever made about exponential growth.</p>



<span id="more-243"></span>



<p>Katamari makes you explore a world at many different scales, all in the same level. You might start by dodging mice under a couch; just a few minutes later, you&#8217;re rolling up the family cat, the furniture, and everything else in the room. It&#8217;s an even better playable version of the <a href="https://www.youtube.com/watch?v=0fKBhvDjuy0">Powers of 10</a> video, made possible by the differential equation:</p>



<div class="wp-block-katex-display-block katex-eq" data-katex-display="true"><pre>\frac{dR}{dt} = s(t)\cdot R \approx kR</pre></div>



<p>You make your magically sticky katamari bigger by rolling stuff up; the bigger you are, the bigger the things you can pick up. So we would expect the radius <em>R</em> of the katamari to grow at a rate which roughly proportional to <em>R</em> itself. The exact rate of change is governed by some function <em>s</em>(<em>t</em>)<strong> </strong>≈<strong> </strong><em>k</em>, which depends on how good you are at finding a route filled with objects of just the right size for you to pick up. The solution to this differential equation</p>



<div class="wp-block-katex-display-block katex-eq" data-katex-display="true"><pre>R = \exp \left( \int s(t) dt \right) \approx e^{kt}</pre></div>



<p>gives a formula for the katamari&#8217;s size at a given time <em>t</em>.</p>



<p>How justified are we in saying that <em>s</em>(<em>t</em>) is roughly constant? I charted the minute-to-minute progress of four let&#8217;s players on YouTube. If the exponential model is a good one, then katamari size should trace out a straight line on a log scale. And so it is:</p>



<figure class="wp-block-wp-chrosyblocks-vega-chart"><div class="chart" data-vega-spec="{
  &quot;mark&quot;: &quot;line&quot;,
  &quot;encoding&quot;: {
    &quot;x&quot;: {
      &quot;field&quot;: &quot;Time&quot;, &quot;type&quot;: &quot;quantitative&quot;,
      &quot;scale&quot;: { &quot;domain&quot;: [0, 25] }
    },
    &quot;y&quot;: {
      &quot;field&quot;: &quot;Katamari size&quot;, &quot;type&quot;: &quot;quantitative&quot;,
      &quot;scale&quot;: {&quot;type&quot;: &quot;log&quot;}
    },
    &quot;color&quot;: {
      &quot;field&quot;: &quot;Source&quot;,
      &quot;legend&quot;: null
    }
  },
  &quot;data&quot;: { &quot;name&quot;: &quot;table&quot; }
}" data-vega-data="{
  &quot;table&quot;: [
    {
      &quot;Time&quot;: 0,
      &quot;Katamari size&quot;: 100,
      &quot;Source&quot;: &quot;Game Grumps&quot;
    },
    {
      &quot;Time&quot;: 1,
      &quot;Katamari size&quot;: 118.7,
      &quot;Source&quot;: &quot;Game Grumps&quot;
    },
    {
      &quot;Time&quot;: 2,
      &quot;Katamari size&quot;: 157.2,
      &quot;Source&quot;: &quot;Game Grumps&quot;
    },
    {
      &quot;Time&quot;: 3,
      &quot;Katamari size&quot;: 182.8,
      &quot;Source&quot;: &quot;Game Grumps&quot;
    },
    {
      &quot;Time&quot;: 4,
      &quot;Katamari size&quot;: 236.9,
      &quot;Source&quot;: &quot;Game Grumps&quot;
    },
    {
      &quot;Time&quot;: 5,
      &quot;Katamari size&quot;: 308.1,
      &quot;Source&quot;: &quot;Game Grumps&quot;
    },
    {
      &quot;Time&quot;: 6,
      &quot;Katamari size&quot;: 360.3,
      &quot;Source&quot;: &quot;Game Grumps&quot;
    },
    {
      &quot;Time&quot;: 7,
      &quot;Katamari size&quot;: 559,
      &quot;Source&quot;: &quot;Game Grumps&quot;
    },
    {
      &quot;Time&quot;: 8,
      &quot;Katamari size&quot;: 677.2,
      &quot;Source&quot;: &quot;Game Grumps&quot;
    },
    {
      &quot;Time&quot;: 9,
      &quot;Katamari size&quot;: 804,
      &quot;Source&quot;: &quot;Game Grumps&quot;
    },
    {
      &quot;Time&quot;: 10,
      &quot;Katamari size&quot;: 920.4,
      &quot;Source&quot;: &quot;Game Grumps&quot;
    },
    {
      &quot;Time&quot;: 11,
      &quot;Katamari size&quot;: 1057.6,
      &quot;Source&quot;: &quot;Game Grumps&quot;
    },
    {
      &quot;Time&quot;: 12,
      &quot;Katamari size&quot;: 1127.7,
      &quot;Source&quot;: &quot;Game Grumps&quot;
    },
    {
      &quot;Time&quot;: 13,
      &quot;Katamari size&quot;: 1160.2,
      &quot;Source&quot;: &quot;Game Grumps&quot;
    },
    {
      &quot;Time&quot;: 14,
      &quot;Katamari size&quot;: 1423.5,
      &quot;Source&quot;: &quot;Game Grumps&quot;
    },
    {
      &quot;Time&quot;: 15,
      &quot;Katamari size&quot;: 1757.2,
      &quot;Source&quot;: &quot;Game Grumps&quot;
    },
    {
      &quot;Time&quot;: 16,
      &quot;Katamari size&quot;: 2735.7,
      &quot;Source&quot;: &quot;Game Grumps&quot;
    },
    {
      &quot;Time&quot;: 17,
      &quot;Katamari size&quot;: 3320.7,
      &quot;Source&quot;: &quot;Game Grumps&quot;
    },
    {
      &quot;Time&quot;: 18,
      &quot;Katamari size&quot;: 4270.9,
      &quot;Source&quot;: &quot;Game Grumps&quot;
    },
    {
      &quot;Time&quot;: 19,
      &quot;Katamari size&quot;: 7099.6,
      &quot;Source&quot;: &quot;Game Grumps&quot;
    },
    {
      &quot;Time&quot;: 20,
      &quot;Katamari size&quot;: 10609.9,
      &quot;Source&quot;: &quot;Game Grumps&quot;
    },
    {
      &quot;Time&quot;: 21,
      &quot;Katamari size&quot;: 11652.3,
      &quot;Source&quot;: &quot;Game Grumps&quot;
    },
    {
      &quot;Time&quot;: 22,
      &quot;Katamari size&quot;: 17109.3,
      &quot;Source&quot;: &quot;Game Grumps&quot;
    },
    {
      &quot;Time&quot;: 23,
      &quot;Katamari size&quot;: 21100.1,
      &quot;Source&quot;: &quot;Game Grumps&quot;
    },
    {
      &quot;Time&quot;: 24,
      &quot;Katamari size&quot;: 26521.7,
      &quot;Source&quot;: &quot;Game Grumps&quot;
    },
    {
      &quot;Time&quot;: 25,
      &quot;Katamari size&quot;: 32821.9,
      &quot;Source&quot;: &quot;Game Grumps&quot;
    },
    {
      &quot;Time&quot;: 0,
      &quot;Katamari size&quot;: 100,
      &quot;Source&quot;: &quot;MasaeAnela&quot;
    },
    {
      &quot;Time&quot;: 1,
      &quot;Katamari size&quot;: 124.2,
      &quot;Source&quot;: &quot;MasaeAnela&quot;
    },
    {
      &quot;Time&quot;: 2,
      &quot;Katamari size&quot;: 156.5,
      &quot;Source&quot;: &quot;MasaeAnela&quot;
    },
    {
      &quot;Time&quot;: 3,
      &quot;Katamari size&quot;: 203.4,
      &quot;Source&quot;: &quot;MasaeAnela&quot;
    },
    {
      &quot;Time&quot;: 4,
      &quot;Katamari size&quot;: 264.1,
      &quot;Source&quot;: &quot;MasaeAnela&quot;
    },
    {
      &quot;Time&quot;: 5,
      &quot;Katamari size&quot;: 326.6,
      &quot;Source&quot;: &quot;MasaeAnela&quot;
    },
    {
      &quot;Time&quot;: 6,
      &quot;Katamari size&quot;: 419.4,
      &quot;Source&quot;: &quot;MasaeAnela&quot;
    },
    {
      &quot;Time&quot;: 7,
      &quot;Katamari size&quot;: 590.1,
      &quot;Source&quot;: &quot;MasaeAnela&quot;
    },
    {
      &quot;Time&quot;: 8,
      &quot;Katamari size&quot;: 810.3,
      &quot;Source&quot;: &quot;MasaeAnela&quot;
    },
    {
      &quot;Time&quot;: 9,
      &quot;Katamari size&quot;: 936.3,
      &quot;Source&quot;: &quot;MasaeAnela&quot;
    },
    {
      &quot;Time&quot;: 10,
      &quot;Katamari size&quot;: 1084.1,
      &quot;Source&quot;: &quot;MasaeAnela&quot;
    },
    {
      &quot;Time&quot;: 11,
      &quot;Katamari size&quot;: 1090.8,
      &quot;Source&quot;: &quot;MasaeAnela&quot;
    },
    {
      &quot;Time&quot;: 12,
      &quot;Katamari size&quot;: 1508,
      &quot;Source&quot;: &quot;MasaeAnela&quot;
    },
    {
      &quot;Time&quot;: 13,
      &quot;Katamari size&quot;: 1819.1,
      &quot;Source&quot;: &quot;MasaeAnela&quot;
    },
    {
      &quot;Time&quot;: 14,
      &quot;Katamari size&quot;: 2379.7,
      &quot;Source&quot;: &quot;MasaeAnela&quot;
    },
    {
      &quot;Time&quot;: 15,
      &quot;Katamari size&quot;: 4194.6,
      &quot;Source&quot;: &quot;MasaeAnela&quot;
    },
    {
      &quot;Time&quot;: 16,
      &quot;Katamari size&quot;: 6984,
      &quot;Source&quot;: &quot;MasaeAnela&quot;
    },
    {
      &quot;Time&quot;: 17,
      &quot;Katamari size&quot;: 8617.3,
      &quot;Source&quot;: &quot;MasaeAnela&quot;
    },
    {
      &quot;Time&quot;: 18,
      &quot;Katamari size&quot;: 9610.7,
      &quot;Source&quot;: &quot;MasaeAnela&quot;
    },
    {
      &quot;Time&quot;: 19,
      &quot;Katamari size&quot;: 11719.7,
      &quot;Source&quot;: &quot;MasaeAnela&quot;
    },
    {
      &quot;Time&quot;: 20,
      &quot;Katamari size&quot;: 17429.8,
      &quot;Source&quot;: &quot;MasaeAnela&quot;
    },
    {
      &quot;Time&quot;: 21,
      &quot;Katamari size&quot;: 21443.8,
      &quot;Source&quot;: &quot;MasaeAnela&quot;
    },
    {
      &quot;Time&quot;: 22,
      &quot;Katamari size&quot;: 25640.1,
      &quot;Source&quot;: &quot;MasaeAnela&quot;
    },
    {
      &quot;Time&quot;: 23,
      &quot;Katamari size&quot;: 40128.6,
      &quot;Source&quot;: &quot;MasaeAnela&quot;
    },
    {
      &quot;Time&quot;: 24,
      &quot;Katamari size&quot;: 63075.2,
      &quot;Source&quot;: &quot;MasaeAnela&quot;
    },
    {
      &quot;Time&quot;: 25,
      &quot;Katamari size&quot;: 76272.4,
      &quot;Source&quot;: &quot;MasaeAnela&quot;
    },
    {
      &quot;Time&quot;: 0,
      &quot;Katamari size&quot;: 100,
      &quot;Source&quot;: &quot;AnzaTNT&quot;
    },
    {
      &quot;Time&quot;: 1,
      &quot;Katamari size&quot;: 127.4,
      &quot;Source&quot;: &quot;AnzaTNT&quot;
    },
    {
      &quot;Time&quot;: 2,
      &quot;Katamari size&quot;: 167.7,
      &quot;Source&quot;: &quot;AnzaTNT&quot;
    },
    {
      &quot;Time&quot;: 3,
      &quot;Katamari size&quot;: 253.6,
      &quot;Source&quot;: &quot;AnzaTNT&quot;
    },
    {
      &quot;Time&quot;: 4,
      &quot;Katamari size&quot;: 298.6,
      &quot;Source&quot;: &quot;AnzaTNT&quot;
    },
    {
      &quot;Time&quot;: 5,
      &quot;Katamari size&quot;: 374,
      &quot;Source&quot;: &quot;AnzaTNT&quot;
    },
    {
      &quot;Time&quot;: 6,
      &quot;Katamari size&quot;: 506.1,
      &quot;Source&quot;: &quot;AnzaTNT&quot;
    },
    {
      &quot;Time&quot;: 7,
      &quot;Katamari size&quot;: 685.4,
      &quot;Source&quot;: &quot;AnzaTNT&quot;
    },
    {
      &quot;Time&quot;: 8,
      &quot;Katamari size&quot;: 910.6,
      &quot;Source&quot;: &quot;AnzaTNT&quot;
    },
    {
      &quot;Time&quot;: 9,
      &quot;Katamari size&quot;: 1125.2,
      &quot;Source&quot;: &quot;AnzaTNT&quot;
    },
    {
      &quot;Time&quot;: 10,
      &quot;Katamari size&quot;: 1492.3,
      &quot;Source&quot;: &quot;AnzaTNT&quot;
    },
    {
      &quot;Time&quot;: 11,
      &quot;Katamari size&quot;: 2213.2,
      &quot;Source&quot;: &quot;AnzaTNT&quot;
    },
    {
      &quot;Time&quot;: 12,
      &quot;Katamari size&quot;: 3392.5,
      &quot;Source&quot;: &quot;AnzaTNT&quot;
    },
    {
      &quot;Time&quot;: 13,
      &quot;Katamari size&quot;: 4317,
      &quot;Source&quot;: &quot;AnzaTNT&quot;
    },
    {
      &quot;Time&quot;: 14,
      &quot;Katamari size&quot;: 7869.3,
      &quot;Source&quot;: &quot;AnzaTNT&quot;
    },
    {
      &quot;Time&quot;: 15,
      &quot;Katamari size&quot;: 10410.6,
      &quot;Source&quot;: &quot;AnzaTNT&quot;
    },
    {
      &quot;Time&quot;: 16,
      &quot;Katamari size&quot;: 12130.4,
      &quot;Source&quot;: &quot;AnzaTNT&quot;
    },
    {
      &quot;Time&quot;: 17,
      &quot;Katamari size&quot;: 12942.8,
      &quot;Source&quot;: &quot;AnzaTNT&quot;
    },
    {
      &quot;Time&quot;: 18,
      &quot;Katamari size&quot;: 19290.9,
      &quot;Source&quot;: &quot;AnzaTNT&quot;
    },
    {
      &quot;Time&quot;: 19,
      &quot;Katamari size&quot;: 24909.9,
      &quot;Source&quot;: &quot;AnzaTNT&quot;
    },
    {
      &quot;Time&quot;: 20,
      &quot;Katamari size&quot;: 30586.3,
      &quot;Source&quot;: &quot;AnzaTNT&quot;
    },
    {
      &quot;Time&quot;: 21,
      &quot;Katamari size&quot;: 49926.6,
      &quot;Source&quot;: &quot;AnzaTNT&quot;
    },
    {
      &quot;Time&quot;: 22,
      &quot;Katamari size&quot;: 63085.7,
      &quot;Source&quot;: &quot;AnzaTNT&quot;
    },
    {
      &quot;Time&quot;: 23,
      &quot;Katamari size&quot;: 72945.5,
      &quot;Source&quot;: &quot;AnzaTNT&quot;
    },
    {
      &quot;Time&quot;: 24,
      &quot;Katamari size&quot;: 82627.6,
      &quot;Source&quot;: &quot;AnzaTNT&quot;
    },
    {
      &quot;Time&quot;: 25,
      &quot;Katamari size&quot;: 85194,
      &quot;Source&quot;: &quot;AnzaTNT&quot;
    },
    {
      &quot;Time&quot;: 0,
      &quot;Katamari size&quot;: 100,
      &quot;Source&quot;: &quot;Kobs&quot;
    },
    {
      &quot;Time&quot;: 1,
      &quot;Katamari size&quot;: 120.1,
      &quot;Source&quot;: &quot;Kobs&quot;
    },
    {
      &quot;Time&quot;: 2,
      &quot;Katamari size&quot;: 215.6,
      &quot;Source&quot;: &quot;Kobs&quot;
    },
    {
      &quot;Time&quot;: 3,
      &quot;Katamari size&quot;: 281,
      &quot;Source&quot;: &quot;Kobs&quot;
    },
    {
      &quot;Time&quot;: 4,
      &quot;Katamari size&quot;: 312.9,
      &quot;Source&quot;: &quot;Kobs&quot;
    },
    {
      &quot;Time&quot;: 5,
      &quot;Katamari size&quot;: 437.8,
      &quot;Source&quot;: &quot;Kobs&quot;
    },
    {
      &quot;Time&quot;: 6,
      &quot;Katamari size&quot;: 584.4,
      &quot;Source&quot;: &quot;Kobs&quot;
    },
    {
      &quot;Time&quot;: 7,
      &quot;Katamari size&quot;: 714.1,
      &quot;Source&quot;: &quot;Kobs&quot;
    },
    {
      &quot;Time&quot;: 8,
      &quot;Katamari size&quot;: 881.1,
      &quot;Source&quot;: &quot;Kobs&quot;
    },
    {
      &quot;Time&quot;: 9,
      &quot;Katamari size&quot;: 1095.2,
      &quot;Source&quot;: &quot;Kobs&quot;
    },
    {
      &quot;Time&quot;: 10,
      &quot;Katamari size&quot;: 1185.3,
      &quot;Source&quot;: &quot;Kobs&quot;
    },
    {
      &quot;Time&quot;: 11,
      &quot;Katamari size&quot;: 1300.6,
      &quot;Source&quot;: &quot;Kobs&quot;
    },
    {
      &quot;Time&quot;: 12,
      &quot;Katamari size&quot;: 1706.4,
      &quot;Source&quot;: &quot;Kobs&quot;
    },
    {
      &quot;Time&quot;: 13,
      &quot;Katamari size&quot;: 2208.2,
      &quot;Source&quot;: &quot;Kobs&quot;
    },
    {
      &quot;Time&quot;: 14,
      &quot;Katamari size&quot;: 3491.5,
      &quot;Source&quot;: &quot;Kobs&quot;
    },
    {
      &quot;Time&quot;: 15,
      &quot;Katamari size&quot;: 5052.8,
      &quot;Source&quot;: &quot;Kobs&quot;
    },
    {
      &quot;Time&quot;: 16,
      &quot;Katamari size&quot;: 7551.7,
      &quot;Source&quot;: &quot;Kobs&quot;
    },
    {
      &quot;Time&quot;: 17,
      &quot;Katamari size&quot;: 9210.1,
      &quot;Source&quot;: &quot;Kobs&quot;
    },
    {
      &quot;Time&quot;: 18,
      &quot;Katamari size&quot;: 13786.1,
      &quot;Source&quot;: &quot;Kobs&quot;
    },
    {
      &quot;Time&quot;: 19,
      &quot;Katamari size&quot;: 18691.2,
      &quot;Source&quot;: &quot;Kobs&quot;
    },
    {
      &quot;Time&quot;: 20,
      &quot;Katamari size&quot;: 23133,
      &quot;Source&quot;: &quot;Kobs&quot;
    },
    {
      &quot;Time&quot;: 21,
      &quot;Katamari size&quot;: 26834.8,
      &quot;Source&quot;: &quot;Kobs&quot;
    },
    {
      &quot;Time&quot;: 22,
      &quot;Katamari size&quot;: 43369.7,
      &quot;Source&quot;: &quot;Kobs&quot;
    },
    {
      &quot;Time&quot;: 23,
      &quot;Katamari size&quot;: 58765.8,
      &quot;Source&quot;: &quot;Kobs&quot;
    },
    {
      &quot;Time&quot;: 24,
      &quot;Katamari size&quot;: 68629.6,
      &quot;Source&quot;: &quot;Kobs&quot;
    },
    {
      &quot;Time&quot;: 25,
      &quot;Katamari size&quot;: 78425.9,
      &quot;Source&quot;: &quot;Kobs&quot;
    }
  ]
}"></div></figure>



<p>The runs keep up a remarkably consistent exponential pace, with a couple visible exceptions — one at the end of the level, when the world starts running out of stuff, and one at roughly the ten-minute mark, when a couple of the players struggled to find items at the right scale to roll up.</p>



<p>I&#8217;m not sure if this proves anything other than the fact that I like to do strange things in my spare time. But if you&#8217;re a calculus teacher with a bit of time and a PlayStation, I suspect this would make a very interesting 3 act problem for your class.</p>
]]></content:encoded>
					
		
		
			</item>
	</channel>
</rss>
